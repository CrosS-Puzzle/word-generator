# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PORT_NUM: ${{ secrets.PORT_NUM }}
  OPEN_AI_API_KEY: '${{ secrets.OPEN_AI_API_KEY }}'
  MONGODB_URI: '${{ secrets.MONGODB_URI }}'
  MONGODB_DBNAME: '${{ secrets.MONGODB_DBNAME }}'

jobs:
  ci:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Make .env
      run: |
        echo "PORT_NUM=${{ secrets.PORT_NUM }}" > .env
        echo "OPEN_AI_API_KEY='${{ secrets.OPEN_AI_API_KEY }}'" >> .env
        echo "MONGODB_URI='${{ secrets.MONGODB_URI }}'" >> .env
        echo "MONGODB_DBNAME='${{ secrets.MONGODB_DBNAME }}'" >> .env
        
    - name: Install Dependencies
      run: yarn install

    - name: Build Application
      run: yarn build

    - name : Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name : Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name : Docker Build & Push
      run: |
        docker build -t pmthk/word-generator .
        docker push pmthk/word-generator

  deploy: 
    needs: ci
    runs-on: ubuntu-latest
    steps:

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Access EC2 instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST_ADDRESS }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd ~
          sudo ./deploy-wordGen.sh
      
